{"expireTime":9007200855199996000,"key":"gatsby-plugin-mdx-entire-payload-d166738c5e48408ffefa5774831ee6d5-","val":{"mdast":{"type":"root","children":[{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Arquivo HTML.","position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":16,"offset":15},"indent":[]}}],"position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":16,"offset":15},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":16,"offset":15},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Variáveis.","position":{"start":{"line":2,"column":3,"offset":19},"end":{"line":2,"column":13,"offset":29},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":19},"end":{"line":2,"column":13,"offset":29},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":17},"end":{"line":2,"column":13,"offset":29},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Arquivo Javascript.","position":{"start":{"line":3,"column":3,"offset":33},"end":{"line":3,"column":22,"offset":52},"indent":[]}}],"position":{"start":{"line":3,"column":3,"offset":33},"end":{"line":3,"column":22,"offset":52},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":31},"end":{"line":3,"column":22,"offset":52},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":3,"column":22,"offset":52},"indent":[1,1]}},{"type":"thematicBreak","position":{"start":{"line":4,"column":1,"offset":54},"end":{"line":4,"column":4,"offset":57},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Arquivo HTML (index.html)","position":{"start":{"line":5,"column":4,"offset":62},"end":{"line":5,"column":29,"offset":87},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":59},"end":{"line":5,"column":29,"offset":87},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":" Para esta aplicação usaremos a lib Jquery para facilitar o desenvolvimento:","position":{"start":{"line":6,"column":1,"offset":89},"end":{"line":6,"column":77,"offset":165},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":89},"end":{"line":6,"column":77,"offset":165},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":" <script type=\"text/javascript\" language=\"javascript\" src=\"https://code.jquery.com/jquery-3.3.1.js\"></script>","position":{"start":{"line":8,"column":1,"offset":169},"end":{"line":10,"column":4,"offset":300},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Agora vamos importar as libs do Power Bi","position":{"start":{"line":12,"column":1,"offset":304},"end":{"line":12,"column":41,"offset":344},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":304},"end":{"line":12,"column":41,"offset":344},"indent":[]}},{"type":"code","lang":"html","meta":null,"value":" <script src=\"https://microsoft.github.io/PowerBI-JavaScript/demo/node_modules/jquery/dist/jquery.js\"></script>","position":{"start":{"line":14,"column":1,"offset":348},"end":{"line":16,"column":4,"offset":475},"indent":[1,1]}},{"type":"code","lang":"html","meta":null,"value":" <script src=\"https://microsoft.github.io/PowerBI-JavaScript/demo/node_modules/powerbi-client/dist/powerbi.js\"></script>","position":{"start":{"line":18,"column":1,"offset":479},"end":{"line":20,"column":4,"offset":615},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Importe também seu arquivo .js e .css","position":{"start":{"line":22,"column":1,"offset":619},"end":{"line":22,"column":38,"offset":656},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":619},"end":{"line":22,"column":38,"offset":656},"indent":[]}},{"type":"code","lang":"html","meta":null,"value":" <script src=\"./js/Powerbi-dashboard.js\"></script>","position":{"start":{"line":24,"column":1,"offset":660},"end":{"line":26,"column":4,"offset":726},"indent":[1,1]}},{"type":"code","lang":"html","meta":null,"value":" <link href=\"./css/powerbi.css\" rel=\"stylesheet\" />","position":{"start":{"line":28,"column":1,"offset":730},"end":{"line":30,"column":4,"offset":797},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Insira em seu HTML uma div que servirá de container para inserirmos o dashbosard","position":{"start":{"line":31,"column":1,"offset":799},"end":{"line":31,"column":81,"offset":879},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":799},"end":{"line":31,"column":81,"offset":879},"indent":[]}},{"type":"code","lang":"html","meta":null,"value":" <div class=\"powerbi container\">\n   <div id=\"embedContainer\"></div>\n </div>","position":{"start":{"line":33,"column":1,"offset":883},"end":{"line":37,"column":4,"offset":978},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Nosso HTML já está preparado para receber o Dashboard, agora vamos configurar o noddo arquivo javascript","position":{"start":{"line":38,"column":1,"offset":980},"end":{"line":38,"column":105,"offset":1084},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":980},"end":{"line":38,"column":105,"offset":1084},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Variáveis","position":{"start":{"line":41,"column":4,"offset":1093},"end":{"line":41,"column":13,"offset":1102},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1090},"end":{"line":41,"column":13,"offset":1102},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Vamos definir nossas variáveis que utilizaremos na contrução do Dashboard que pegamos na doc acima na aba Powe Bi:","position":{"start":{"line":43,"column":1,"offset":1106},"end":{"line":43,"column":115,"offset":1220},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1106},"end":{"line":43,"column":115,"offset":1220},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const embedUrl = 'https://app.powerbi.com/reportEmbed?reportId=53bb4afb-####-####-####-####-##########&groupId=5ed877b1-####-####-####-############'\nconst groupId = '5ed877b1-####-####-####-############'\nconst reportId = '53bb4afb-####-####-####-####-############'","position":{"start":{"line":45,"column":1,"offset":1224},"end":{"line":49,"column":4,"offset":1511},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Arquivo Javascript (index.js)","position":{"start":{"line":51,"column":4,"offset":1518},"end":{"line":51,"column":33,"offset":1547},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1515},"end":{"line":51,"column":33,"offset":1547},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Primeiro vamos instanciar o módulo do Power Bi importado no nosso HTML","position":{"start":{"line":53,"column":1,"offset":1551},"end":{"line":53,"column":71,"offset":1621},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1551},"end":{"line":53,"column":71,"offset":1621},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":" var models = window[\"powerbi-client\"].models;\n var permissions = models.Permissions.All;","position":{"start":{"line":55,"column":1,"offset":1625},"end":{"line":58,"column":4,"offset":1738},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Isso nos permitirá usarmos funções da lib do Power Bi Javascript.","position":{"start":{"line":59,"column":1,"offset":1740},"end":{"line":59,"column":66,"offset":1805},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1740},"end":{"line":59,"column":66,"offset":1805},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Agora vamos montar nossas funções para a renderização do Dashboard:","position":{"start":{"line":61,"column":1,"offset":1809},"end":{"line":61,"column":68,"offset":1876},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1809},"end":{"line":61,"column":68,"offset":1876},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A função abaixo vai gerar os parametros de renderização do dashboars e receber um token embedado que iremos capturar na nossa próxima função:","position":{"start":{"line":63,"column":1,"offset":1880},"end":{"line":63,"column":142,"offset":2021},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1880},"end":{"line":63,"column":142,"offset":2021},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":" function mountConfigAcces(token) {\n   const config = {\n     type: \"report\",\n     tokenType: models.TokenType.Embed,\n     accessToken: token,\n     embedUrl: embedUrl,\n     id: reportId,\n     permissions: permissions,\n     settings: {\n       layoutType: models.LayoutType.Custom,\n       customLayout: {\n         displayOption: models.DisplayOption.FitToWidth,\n       },\n     },\n   };\n   return config;\n }","position":{"start":{"line":65,"column":1,"offset":2025},"end":{"line":83,"column":4,"offset":2482},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Nesta função vamos fazer a chamada para a rota do nosso back-end para pegar o token e chamar a função criada acima e colocar o token recebido como paremetro","position":{"start":{"line":85,"column":1,"offset":2486},"end":{"line":85,"column":157,"offset":2642},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":2486},"end":{"line":85,"column":157,"offset":2642},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"No sucesso da requisição renderizaremos o nosso Dashboard.","position":{"start":{"line":87,"column":1,"offset":2646},"end":{"line":87,"column":59,"offset":2704},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2646},"end":{"line":87,"column":59,"offset":2704},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"function getParametersDasboardAdmin() {\n   $.ajax({\n     async: true,\n     crossDomain: true,\n     url: `${backPowerBi}/powerbi/getToken`,\n     type: \"GET\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n       Accept: \"application/json\",\n     },\n     success: (data) => {\n       var embedContainer = $(\"#embedContainer\")[0];\n       const configAccess = mountConfigAcces(data.token);\n       var report = powerbi.embed(embedContainer, configAccess);\n\n       report.off(\"loaded\");\n\n       report.on(\"loaded\", function () {\n         console.log(\"Loaded\");\n       });\n     },\n     error: (err) => {\n       console.log(\"error\", err);\n     },\n   });\n }","position":{"start":{"line":89,"column":1,"offset":2708},"end":{"line":116,"column":4,"offset":3436},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Front End\",\"metaTitle\":\"front-end\",\"metaDescription\":\"front-end\"}","position":{"start":{"line":119,"column":1,"offset":3440},"end":{"line":119,"column":104,"offset":3543},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":119,"column":104,"offset":3543}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Front End\",\n  \"metaTitle\": \"front-end\",\n  \"metaDescription\": \"front-end\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Arquivo HTML.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vari\\xE1veis.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Arquivo Javascript.\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Arquivo HTML (index.html)\"), mdx(\"p\", null, \" Para esta aplica\\xE7\\xE3o usaremos a lib Jquery para facilitar o desenvolvimento:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \" <script type=\\\"text/javascript\\\" language=\\\"javascript\\\" src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n\")), mdx(\"p\", null, \"Agora vamos importar as libs do Power Bi\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \" <script src=\\\"https://microsoft.github.io/PowerBI-JavaScript/demo/node_modules/jquery/dist/jquery.js\\\"></script>\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \" <script src=\\\"https://microsoft.github.io/PowerBI-JavaScript/demo/node_modules/powerbi-client/dist/powerbi.js\\\"></script>\\n\")), mdx(\"p\", null, \"Importe tamb\\xE9m seu arquivo .js e .css\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \" <script src=\\\"./js/Powerbi-dashboard.js\\\"></script>\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \" <link href=\\\"./css/powerbi.css\\\" rel=\\\"stylesheet\\\" />\\n\")), mdx(\"p\", null, \"Insira em seu HTML uma div que servir\\xE1 de container para inserirmos o dashbosard\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \" <div class=\\\"powerbi container\\\">\\n   <div id=\\\"embedContainer\\\"></div>\\n </div>\\n\")), mdx(\"p\", null, \"Nosso HTML j\\xE1 est\\xE1 preparado para receber o Dashboard, agora vamos configurar o noddo arquivo javascript\"), mdx(\"h2\", null, \"Vari\\xE1veis\"), mdx(\"p\", null, \"Vamos definir nossas vari\\xE1veis que utilizaremos na contru\\xE7\\xE3o do Dashboard que pegamos na doc acima na aba Powe Bi:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const embedUrl = 'https://app.powerbi.com/reportEmbed?reportId=53bb4afb-####-####-####-####-##########&groupId=5ed877b1-####-####-####-############'\\nconst groupId = '5ed877b1-####-####-####-############'\\nconst reportId = '53bb4afb-####-####-####-####-############'\\n\")), mdx(\"h2\", null, \"Arquivo Javascript (index.js)\"), mdx(\"p\", null, \"Primeiro vamos instanciar o m\\xF3dulo do Power Bi importado no nosso HTML\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \" var models = window[\\\"powerbi-client\\\"].models;\\n var permissions = models.Permissions.All;\\n\")), mdx(\"p\", null, \"Isso nos permitir\\xE1 usarmos fun\\xE7\\xF5es da lib do Power Bi Javascript.\"), mdx(\"p\", null, \"Agora vamos montar nossas fun\\xE7\\xF5es para a renderiza\\xE7\\xE3o do Dashboard:\"), mdx(\"p\", null, \"A fun\\xE7\\xE3o abaixo vai gerar os parametros de renderiza\\xE7\\xE3o do dashboars e receber um token embedado que iremos capturar na nossa pr\\xF3xima fun\\xE7\\xE3o:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \" function mountConfigAcces(token) {\\n   const config = {\\n     type: \\\"report\\\",\\n     tokenType: models.TokenType.Embed,\\n     accessToken: token,\\n     embedUrl: embedUrl,\\n     id: reportId,\\n     permissions: permissions,\\n     settings: {\\n       layoutType: models.LayoutType.Custom,\\n       customLayout: {\\n         displayOption: models.DisplayOption.FitToWidth,\\n       },\\n     },\\n   };\\n   return config;\\n }\\n\")), mdx(\"p\", null, \"Nesta fun\\xE7\\xE3o vamos fazer a chamada para a rota do nosso back-end para pegar o token e chamar a fun\\xE7\\xE3o criada acima e colocar o token recebido como paremetro\"), mdx(\"p\", null, \"No sucesso da requisi\\xE7\\xE3o renderizaremos o nosso Dashboard.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"function getParametersDasboardAdmin() {\\n   $.ajax({\\n     async: true,\\n     crossDomain: true,\\n     url: `${backPowerBi}/powerbi/getToken`,\\n     type: \\\"GET\\\",\\n     headers: {\\n       \\\"Content-Type\\\": \\\"application/json\\\",\\n       Accept: \\\"application/json\\\",\\n     },\\n     success: (data) => {\\n       var embedContainer = $(\\\"#embedContainer\\\")[0];\\n       const configAccess = mountConfigAcces(data.token);\\n       var report = powerbi.embed(embedContainer, configAccess);\\n\\n       report.off(\\\"loaded\\\");\\n\\n       report.on(\\\"loaded\\\", function () {\\n         console.log(\\\"Loaded\\\");\\n       });\\n     },\\n     error: (err) => {\\n       console.log(\\\"error\\\", err);\\n     },\\n   });\\n }\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Front End\",\n  \"metaTitle\": \"front-end\",\n  \"metaDescription\": \"front-end\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <ul>\n      <li parentName=\"ul\">{`Arquivo HTML.`}</li>\n      <li parentName=\"ul\">{`Variáveis.`}</li>\n      <li parentName=\"ul\">{`Arquivo Javascript.`}</li>\n    </ul>\n    <hr></hr>\n    <h2>{`Arquivo HTML (index.html)`}</h2>\n    <p>{` Para esta aplicação usaremos a lib Jquery para facilitar o desenvolvimento:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{` <script type=\"text/javascript\" language=\"javascript\" src=\"https://code.jquery.com/jquery-3.3.1.js\"></script>\n`}</code></pre>\n    <p>{`Agora vamos importar as libs do Power Bi`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{` <script src=\"https://microsoft.github.io/PowerBI-JavaScript/demo/node_modules/jquery/dist/jquery.js\"></script>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{` <script src=\"https://microsoft.github.io/PowerBI-JavaScript/demo/node_modules/powerbi-client/dist/powerbi.js\"></script>\n`}</code></pre>\n    <p>{`Importe também seu arquivo .js e .css`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{` <script src=\"./js/Powerbi-dashboard.js\"></script>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{` <link href=\"./css/powerbi.css\" rel=\"stylesheet\" />\n`}</code></pre>\n    <p>{`Insira em seu HTML uma div que servirá de container para inserirmos o dashbosard`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{` <div class=\"powerbi container\">\n   <div id=\"embedContainer\"></div>\n </div>\n`}</code></pre>\n    <p>{`Nosso HTML já está preparado para receber o Dashboard, agora vamos configurar o noddo arquivo javascript`}</p>\n    <h2>{`Variáveis`}</h2>\n    <p>{`Vamos definir nossas variáveis que utilizaremos na contrução do Dashboard que pegamos na doc acima na aba Powe Bi:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const embedUrl = 'https://app.powerbi.com/reportEmbed?reportId=53bb4afb-####-####-####-####-##########&groupId=5ed877b1-####-####-####-############'\nconst groupId = '5ed877b1-####-####-####-############'\nconst reportId = '53bb4afb-####-####-####-####-############'\n`}</code></pre>\n    <h2>{`Arquivo Javascript (index.js)`}</h2>\n    <p>{`Primeiro vamos instanciar o módulo do Power Bi importado no nosso HTML`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{` var models = window[\"powerbi-client\"].models;\n var permissions = models.Permissions.All;\n`}</code></pre>\n    <p>{`Isso nos permitirá usarmos funções da lib do Power Bi Javascript.`}</p>\n    <p>{`Agora vamos montar nossas funções para a renderização do Dashboard:`}</p>\n    <p>{`A função abaixo vai gerar os parametros de renderização do dashboars e receber um token embedado que iremos capturar na nossa próxima função:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{` function mountConfigAcces(token) {\n   const config = {\n     type: \"report\",\n     tokenType: models.TokenType.Embed,\n     accessToken: token,\n     embedUrl: embedUrl,\n     id: reportId,\n     permissions: permissions,\n     settings: {\n       layoutType: models.LayoutType.Custom,\n       customLayout: {\n         displayOption: models.DisplayOption.FitToWidth,\n       },\n     },\n   };\n   return config;\n }\n`}</code></pre>\n    <p>{`Nesta função vamos fazer a chamada para a rota do nosso back-end para pegar o token e chamar a função criada acima e colocar o token recebido como paremetro`}</p>\n    <p>{`No sucesso da requisição renderizaremos o nosso Dashboard.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function getParametersDasboardAdmin() {\n   $.ajax({\n     async: true,\n     crossDomain: true,\n     url: \\`\\${backPowerBi}/powerbi/getToken\\`,\n     type: \"GET\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n       Accept: \"application/json\",\n     },\n     success: (data) => {\n       var embedContainer = $(\"#embedContainer\")[0];\n       const configAccess = mountConfigAcces(data.token);\n       var report = powerbi.embed(embedContainer, configAccess);\n\n       report.off(\"loaded\");\n\n       report.on(\"loaded\", function () {\n         console.log(\"Loaded\");\n       });\n     },\n     error: (err) => {\n       console.log(\"error\", err);\n     },\n   });\n }\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}