{"expireTime":9007200855199825000,"key":"gatsby-plugin-mdx-entire-payload-43cc25a1a233c613a36165cda004c130-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"✅ Avaliação","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":15,"offset":15},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":15,"offset":15},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Dificuldade de implementação: ","position":{"start":{"line":4,"column":3,"offset":19},"end":{"line":4,"column":33,"offset":49},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Fácil","position":{"start":{"line":4,"column":35,"offset":51},"end":{"line":4,"column":40,"offset":56},"indent":[]}}],"position":{"start":{"line":4,"column":33,"offset":49},"end":{"line":4,"column":42,"offset":58},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":19},"end":{"line":4,"column":42,"offset":58},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":17},"end":{"line":4,"column":42,"offset":58},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Dificuldade de manutenção: ","position":{"start":{"line":5,"column":3,"offset":61},"end":{"line":5,"column":30,"offset":88},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Fácil","position":{"start":{"line":5,"column":32,"offset":90},"end":{"line":5,"column":37,"offset":95},"indent":[]}}],"position":{"start":{"line":5,"column":30,"offset":88},"end":{"line":5,"column":39,"offset":97},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":61},"end":{"line":5,"column":39,"offset":97},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":59},"end":{"line":5,"column":39,"offset":97},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Tempo médio de resposta da API: ","position":{"start":{"line":6,"column":3,"offset":100},"end":{"line":6,"column":35,"offset":132},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"1.4s","position":{"start":{"line":6,"column":37,"offset":134},"end":{"line":6,"column":41,"offset":138},"indent":[]}}],"position":{"start":{"line":6,"column":35,"offset":132},"end":{"line":6,"column":43,"offset":140},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":100},"end":{"line":6,"column":43,"offset":140},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":98},"end":{"line":6,"column":43,"offset":140},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Linguagem da API: ","position":{"start":{"line":7,"column":3,"offset":143},"end":{"line":7,"column":21,"offset":161},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"JSON","position":{"start":{"line":7,"column":23,"offset":163},"end":{"line":7,"column":27,"offset":167},"indent":[]}}],"position":{"start":{"line":7,"column":21,"offset":161},"end":{"line":7,"column":29,"offset":169},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":143},"end":{"line":7,"column":29,"offset":169},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":141},"end":{"line":7,"column":29,"offset":169},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":17},"end":{"line":7,"column":29,"offset":169},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Exemplo de requisição:","position":{"start":{"line":9,"column":4,"offset":174},"end":{"line":9,"column":26,"offset":196},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":171},"end":{"line":9,"column":26,"offset":196},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"linkReference","identifier":"get","label":"GET","referenceType":"shortcut","children":[{"type":"text","value":"GET","position":{"start":{"line":11,"column":4,"offset":201},"end":{"line":11,"column":7,"offset":204},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":200},"end":{"line":11,"column":8,"offset":205},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":198},"end":{"line":11,"column":10,"offset":207},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":11,"column":10,"offset":207},"end":{"line":11,"column":11,"offset":208},"indent":[]}},{"type":"link","title":null,"url":"https://consumer.bvsnet.com.br/dadoscadastrais/json/v02","children":[{"type":"text","value":"https://consumer.bvsnet.com.br/dadoscadastrais/json/v02","position":{"start":{"line":11,"column":11,"offset":208},"end":{"line":11,"column":66,"offset":263},"indent":[]}}],"position":{"start":{"line":11,"column":11,"offset":208},"end":{"line":11,"column":66,"offset":263},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":198},"end":{"line":11,"column":66,"offset":263},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Query Params:","position":{"start":{"line":13,"column":5,"offset":269},"end":{"line":13,"column":18,"offset":282},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":265},"end":{"line":13,"column":18,"offset":282},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"?usuario=<Usuario> # Código de cliente (08 dígitos numéricos). Código de 11 não é valido para esta versão.\n?senha=<Senha> # Senha do cliente (6 dígitos alfanumérico)\n?cpf=<cpf> # Ou CPF ou Telefone\n?telefone=<telefone> # 10/11 dígitos numéricos\n?params=<tipo> # Tipo da consulta (CB, CC, LO, QA). O Cliente pode passar 1 ou mais tipos como parâmetro.\n\n######## TIPOS ########\n# CB: Cadastro Básico\n# CC: Cadastro Completo\n# LO: Localização\n# QA: Qualificação","position":{"start":{"line":15,"column":1,"offset":284},"end":{"line":27,"column":4,"offset":755},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Os parâmetros usuário e senha na requisição são obrigatórios e passados pelo Headers.","position":{"start":{"line":29,"column":3,"offset":759},"end":{"line":29,"column":88,"offset":844},"indent":[]}}],"position":{"start":{"line":29,"column":3,"offset":759},"end":{"line":29,"column":88,"offset":844},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":757},"end":{"line":29,"column":88,"offset":844},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Os parâmetros cpf ou telefone e tipo na requisição são obrigatórias e passados pelo Body.","position":{"start":{"line":30,"column":3,"offset":847},"end":{"line":30,"column":92,"offset":936},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":847},"end":{"line":30,"column":92,"offset":936},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":845},"end":{"line":30,"column":92,"offset":936},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Consulta realizada pelo telefone, retornara sempre o modulo LO mesmo que não tenha sido selecionado.","position":{"start":{"line":31,"column":3,"offset":939},"end":{"line":31,"column":103,"offset":1039},"indent":[]}}],"position":{"start":{"line":31,"column":3,"offset":939},"end":{"line":31,"column":103,"offset":1039},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":937},"end":{"line":31,"column":103,"offset":1039},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Caso telefone retorne dois ou três cpfs, será retornado o modulo CB com nome e cpf para realizar uma nova consulta.","position":{"start":{"line":32,"column":3,"offset":1042},"end":{"line":32,"column":118,"offset":1157},"indent":[]}}],"position":{"start":{"line":32,"column":3,"offset":1042},"end":{"line":32,"column":118,"offset":1157},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1040},"end":{"line":32,"column":118,"offset":1157},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":757},"end":{"line":32,"column":118,"offset":1157},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"JSON Entrada:","position":{"start":{"line":34,"column":4,"offset":1162},"end":{"line":34,"column":17,"offset":1175},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1159},"end":{"line":34,"column":17,"offset":1175},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Exemplo utilizando ","position":{"start":{"line":36,"column":1,"offset":1177},"end":{"line":36,"column":20,"offset":1196},"indent":[]}},{"type":"inlineCode","value":"axios","position":{"start":{"line":36,"column":20,"offset":1196},"end":{"line":36,"column":27,"offset":1203},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1177},"end":{"line":36,"column":27,"offset":1203},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"class GetDataBoaVistaService {\n  async get(request: Request, response: Response) {\n    const { cpf } = request.params;\n\n    const boaVistaResponse = await axios.get(\"https://consumer.bvsnet.com.br/dadoscadastrais/json/v02\", {\n      params: {\n        usuario: process.env.BOAVISTA_USERNAME,\n        senha: process.env.BOAVISTA_PASSWORD,\n        cpf,\n        params: 'CB',\n      },\n    });\n\n    return response.json(boaVistaResponse.data);\n  }\n}","position":{"start":{"line":38,"column":1,"offset":1205},"end":{"line":55,"column":4,"offset":1658},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"JSON Saída:","position":{"start":{"line":57,"column":4,"offset":1663},"end":{"line":57,"column":15,"offset":1674},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1660},"end":{"line":57,"column":15,"offset":1674},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"{\n  \"cadastroBasico\": {\n    \"cpf\": \"37800807886\",\n    \"nome\": \"Leonardo Oliveira De Almeida\",\n    \"nomeMae\": \"Herica Ribeiro De Oliveira\",\n    \"dataNascimento\": \"18/07/1999\",\n    \"situacaoCPF\": \"Regular\"\n  }\n}","position":{"start":{"line":59,"column":1,"offset":1676},"end":{"line":69,"column":4,"offset":1897},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Todas as saídas","position":{"start":{"line":71,"column":4,"offset":1902},"end":{"line":71,"column":19,"offset":1917},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":1899},"end":{"line":71,"column":19,"offset":1917},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"{\n\t\"cadastroBasico\": [\n\t\t{\n\t\t\t\"cpf\": \"26884624825\",\n\t\t\t\"nome\": \"Nome Teste\",\n\t\t\t\"nomeMae\": \"Nome Teste Mae\",\n\t\t\t\"dataNascimento\": \"26/08/1976\",\n\t\t\t\"situacaoCPF\": \"Regular\"\n\t\t}\n\t],\n\t\"cadastroCompleto\": {\n\t\t\"cpf\": \"26884624825\",\n\t\t\"nome\": \"Nome Teste\",\n\t\t\"nomeMae\": \"Nome Teste Mae\",\n\t\t\"dataNascimento\": \"26/08/1976\",\n\t\t\"situacaoCPF\": \"Regular\",\n\t\t\"dataAtualizacaoCPF\": \"01/01/0001\",\n\t\t\"regiaoOrigemCPF\": \"Sao Paulo\",\n\t\t\"signo\": \"Virgem\",\n\t\t\"sexo\": \"F\",\n\t\t\"grauInstrucao\": \"Pos Graduacao Completa\",\n\t\t\"estadoCivil\": \"Solteiro\",\n\t\t\"obito\": \"Não\"\n\t},\n\t\"localizacao\": {\n\t\t\"cpf\": \"26884624825\",\n\t\t\"emails\": [\n\t\t\t\"anselmo@hudsonrebello.com.br\"\n\t\t],\n\t\t\"enderecos\": [\n\t\t\t{\n\t\t\t\t\"tipoLogradouro\": \"R\",\n\t\t\t\t\"logradouro\": \"Testes\",\n\t\t\t\t\"numero\": \"12\",\n\t\t\t\t\"complemento\": \"BLOCO TESTE\",\n\t\t\t\t\"bairro\": \"Bairro Teste\",\n\t\t\t\t\"cidade\": \"Sao Paulo\",\n\t\t\t\t\"uf\": \"SP\",\n\t\t\t\t\"cep\": \"01014000\"\n\t\t\t}\n\t\t],\n\t\t\"telefones\": [\n\t\t\t{\n\t\t\t\t\"ddd\": \"0\",\n\t\t\t\t\"numero\": \"222223925\",\n\t\t\t\t\"tipo\": \"CELULAR\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"ddd\": \"0\",\n\t\t\t\t\"numero\": \"222223923\",\n\t\t\t\t\"tipo\": \"CELULAR\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"ddd\": \"0\",\n\t\t\t\t\"numero\": \"222223924\",\n\t\t\t\t\"tipo\": \"CELULAR\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"ddd\": \"11\",\n\t\t\t\t\"numero\": \"929321346\",\n\t\t\t\t\"tipo\": \"CELULAR\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"ddd\": \"11\",\n\t\t\t\t\"numero\": \"929332347\",\n\t\t\t\t\"tipo\": \"CELULAR\"\n\t\t\t}\n\t\t]\n\t},\n\t\"qualificacao\": {\n\t\t\"cpf\": \"26884624825\",\n\t\t\"obito\": \"Não\",\n\t\t\"pessoasRelacionada\": [\n\t\t\t{\n\t\t\t\t\"nome\": \"Nome Teste Mae\",\n\t\t\t\t\"grauParentesco\": \"Mae\"\n\t\t\t}\n\t\t]\n\t}\n}","position":{"start":{"line":73,"column":1,"offset":1919},"end":{"line":154,"column":4,"offset":3378},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Caso telefone retorne dois ou três cpfs, será retornado o modulo CB com nome e cpf para realizar uma nova consulta.","position":{"start":{"line":156,"column":3,"offset":3382},"end":{"line":156,"column":118,"offset":3497},"indent":[]}}],"position":{"start":{"line":156,"column":3,"offset":3382},"end":{"line":156,"column":118,"offset":3497},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":3380},"end":{"line":156,"column":118,"offset":3497},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":3380},"end":{"line":156,"column":118,"offset":3497},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"{\n  \"cadastroBasico\": [\n    {\n        \"cpf\": \"04205831900\",\n        \"nome\": \"Valdiney Ferreira De Matos\"\n    },\n    {\n        \"cpf\": \"40466930704\",\n        \"nome\": \"Milena De Fatima Nunes\"\n    },\n    {\n        \"cpf\": \"87559250300\",\n        \"nome\": \"Maria Das Neves Dias Ferreira\"\n    }\n  ]\n}","position":{"start":{"line":158,"column":1,"offset":3499},"end":{"line":175,"column":4,"offset":3802},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Boa Vista - SCPC\",\"metaTitle\":\"\",\"metaDescription\":\"\"}","position":{"start":{"line":178,"column":1,"offset":3805},"end":{"line":178,"column":93,"offset":3897},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":178,"column":93,"offset":3897}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Boa Vista - SCPC\",\n  \"metaTitle\": \"\",\n  \"metaDescription\": \"\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\u2705 Avalia\\xE7\\xE3o\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dificuldade de implementa\\xE7\\xE3o: \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"F\\xE1cil\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dificuldade de manuten\\xE7\\xE3o: \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"F\\xE1cil\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tempo m\\xE9dio de resposta da API: \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"1.4s\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Linguagem da API: \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"JSON\"))), mdx(\"h2\", null, \"Exemplo de requisi\\xE7\\xE3o:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"[GET]\"), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://consumer.bvsnet.com.br/dadoscadastrais/json/v02\"\n  }), \"https://consumer.bvsnet.com.br/dadoscadastrais/json/v02\")), mdx(\"h3\", null, \"Query Params:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"?usuario=<Usuario> # C\\xF3digo de cliente (08 d\\xEDgitos num\\xE9ricos). C\\xF3digo de 11 n\\xE3o \\xE9 valido para esta vers\\xE3o.\\n?senha=<Senha> # Senha do cliente (6 d\\xEDgitos alfanum\\xE9rico)\\n?cpf=<cpf> # Ou CPF ou Telefone\\n?telefone=<telefone> # 10/11 d\\xEDgitos num\\xE9ricos\\n?params=<tipo> # Tipo da consulta (CB, CC, LO, QA). O Cliente pode passar 1 ou mais tipos como par\\xE2metro.\\n\\n######## TIPOS ########\\n# CB: Cadastro B\\xE1sico\\n# CC: Cadastro Completo\\n# LO: Localiza\\xE7\\xE3o\\n# QA: Qualifica\\xE7\\xE3o\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Os par\\xE2metros usu\\xE1rio e senha na requisi\\xE7\\xE3o s\\xE3o obrigat\\xF3rios e passados pelo Headers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Os par\\xE2metros cpf ou telefone e tipo na requisi\\xE7\\xE3o s\\xE3o obrigat\\xF3rias e passados pelo Body.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consulta realizada pelo telefone, retornara sempre o modulo LO mesmo que n\\xE3o tenha sido selecionado.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Caso telefone retorne dois ou tr\\xEAs cpfs, ser\\xE1 retornado o modulo CB com nome e cpf para realizar uma nova consulta.\")), mdx(\"h2\", null, \"JSON Entrada:\"), mdx(\"p\", null, \"Exemplo utilizando \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"axios\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"class GetDataBoaVistaService {\\n  async get(request: Request, response: Response) {\\n    const { cpf } = request.params;\\n\\n    const boaVistaResponse = await axios.get(\\\"https://consumer.bvsnet.com.br/dadoscadastrais/json/v02\\\", {\\n      params: {\\n        usuario: process.env.BOAVISTA_USERNAME,\\n        senha: process.env.BOAVISTA_PASSWORD,\\n        cpf,\\n        params: 'CB',\\n      },\\n    });\\n\\n    return response.json(boaVistaResponse.data);\\n  }\\n}\\n\")), mdx(\"h2\", null, \"JSON Sa\\xEDda:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"cadastroBasico\\\": {\\n    \\\"cpf\\\": \\\"37800807886\\\",\\n    \\\"nome\\\": \\\"Leonardo Oliveira De Almeida\\\",\\n    \\\"nomeMae\\\": \\\"Herica Ribeiro De Oliveira\\\",\\n    \\\"dataNascimento\\\": \\\"18/07/1999\\\",\\n    \\\"situacaoCPF\\\": \\\"Regular\\\"\\n  }\\n}\\n\")), mdx(\"h2\", null, \"Todas as sa\\xEDdas\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"cadastroBasico\\\": [\\n        {\\n            \\\"cpf\\\": \\\"26884624825\\\",\\n            \\\"nome\\\": \\\"Nome Teste\\\",\\n            \\\"nomeMae\\\": \\\"Nome Teste Mae\\\",\\n            \\\"dataNascimento\\\": \\\"26/08/1976\\\",\\n            \\\"situacaoCPF\\\": \\\"Regular\\\"\\n        }\\n    ],\\n    \\\"cadastroCompleto\\\": {\\n        \\\"cpf\\\": \\\"26884624825\\\",\\n        \\\"nome\\\": \\\"Nome Teste\\\",\\n        \\\"nomeMae\\\": \\\"Nome Teste Mae\\\",\\n        \\\"dataNascimento\\\": \\\"26/08/1976\\\",\\n        \\\"situacaoCPF\\\": \\\"Regular\\\",\\n        \\\"dataAtualizacaoCPF\\\": \\\"01/01/0001\\\",\\n        \\\"regiaoOrigemCPF\\\": \\\"Sao Paulo\\\",\\n        \\\"signo\\\": \\\"Virgem\\\",\\n        \\\"sexo\\\": \\\"F\\\",\\n        \\\"grauInstrucao\\\": \\\"Pos Graduacao Completa\\\",\\n        \\\"estadoCivil\\\": \\\"Solteiro\\\",\\n        \\\"obito\\\": \\\"N\\xE3o\\\"\\n    },\\n    \\\"localizacao\\\": {\\n        \\\"cpf\\\": \\\"26884624825\\\",\\n        \\\"emails\\\": [\\n            \\\"anselmo@hudsonrebello.com.br\\\"\\n        ],\\n        \\\"enderecos\\\": [\\n            {\\n                \\\"tipoLogradouro\\\": \\\"R\\\",\\n                \\\"logradouro\\\": \\\"Testes\\\",\\n                \\\"numero\\\": \\\"12\\\",\\n                \\\"complemento\\\": \\\"BLOCO TESTE\\\",\\n                \\\"bairro\\\": \\\"Bairro Teste\\\",\\n                \\\"cidade\\\": \\\"Sao Paulo\\\",\\n                \\\"uf\\\": \\\"SP\\\",\\n                \\\"cep\\\": \\\"01014000\\\"\\n            }\\n        ],\\n        \\\"telefones\\\": [\\n            {\\n                \\\"ddd\\\": \\\"0\\\",\\n                \\\"numero\\\": \\\"222223925\\\",\\n                \\\"tipo\\\": \\\"CELULAR\\\"\\n            },\\n            {\\n                \\\"ddd\\\": \\\"0\\\",\\n                \\\"numero\\\": \\\"222223923\\\",\\n                \\\"tipo\\\": \\\"CELULAR\\\"\\n            },\\n            {\\n                \\\"ddd\\\": \\\"0\\\",\\n                \\\"numero\\\": \\\"222223924\\\",\\n                \\\"tipo\\\": \\\"CELULAR\\\"\\n            },\\n            {\\n                \\\"ddd\\\": \\\"11\\\",\\n                \\\"numero\\\": \\\"929321346\\\",\\n                \\\"tipo\\\": \\\"CELULAR\\\"\\n            },\\n            {\\n                \\\"ddd\\\": \\\"11\\\",\\n                \\\"numero\\\": \\\"929332347\\\",\\n                \\\"tipo\\\": \\\"CELULAR\\\"\\n            }\\n        ]\\n    },\\n    \\\"qualificacao\\\": {\\n        \\\"cpf\\\": \\\"26884624825\\\",\\n        \\\"obito\\\": \\\"N\\xE3o\\\",\\n        \\\"pessoasRelacionada\\\": [\\n            {\\n                \\\"nome\\\": \\\"Nome Teste Mae\\\",\\n                \\\"grauParentesco\\\": \\\"Mae\\\"\\n            }\\n        ]\\n    }\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Caso telefone retorne dois ou tr\\xEAs cpfs, ser\\xE1 retornado o modulo CB com nome e cpf para realizar uma nova consulta.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"cadastroBasico\\\": [\\n    {\\n        \\\"cpf\\\": \\\"04205831900\\\",\\n        \\\"nome\\\": \\\"Valdiney Ferreira De Matos\\\"\\n    },\\n    {\\n        \\\"cpf\\\": \\\"40466930704\\\",\\n        \\\"nome\\\": \\\"Milena De Fatima Nunes\\\"\\n    },\\n    {\\n        \\\"cpf\\\": \\\"87559250300\\\",\\n        \\\"nome\\\": \\\"Maria Das Neves Dias Ferreira\\\"\\n    }\\n  ]\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Boa Vista - SCPC\",\n  \"metaTitle\": \"\",\n  \"metaDescription\": \"\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`✅ Avaliação`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Dificuldade de implementação: `}<strong parentName=\"li\">{`Fácil`}</strong></li>\n      <li parentName=\"ul\">{`Dificuldade de manutenção: `}<strong parentName=\"li\">{`Fácil`}</strong></li>\n      <li parentName=\"ul\">{`Tempo médio de resposta da API: `}<strong parentName=\"li\">{`1.4s`}</strong></li>\n      <li parentName=\"ul\">{`Linguagem da API: `}<strong parentName=\"li\">{`JSON`}</strong></li>\n    </ul>\n    <h2>{`Exemplo de requisição:`}</h2>\n    <p><strong parentName=\"p\">{`[GET]`}</strong>{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://consumer.bvsnet.com.br/dadoscadastrais/json/v02\"\n      }}>{`https://consumer.bvsnet.com.br/dadoscadastrais/json/v02`}</a></p>\n    <h3>{`Query Params:`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`?usuario=<Usuario> # Código de cliente (08 dígitos numéricos). Código de 11 não é valido para esta versão.\n?senha=<Senha> # Senha do cliente (6 dígitos alfanumérico)\n?cpf=<cpf> # Ou CPF ou Telefone\n?telefone=<telefone> # 10/11 dígitos numéricos\n?params=<tipo> # Tipo da consulta (CB, CC, LO, QA). O Cliente pode passar 1 ou mais tipos como parâmetro.\n\n######## TIPOS ########\n# CB: Cadastro Básico\n# CC: Cadastro Completo\n# LO: Localização\n# QA: Qualificação\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Os parâmetros usuário e senha na requisição são obrigatórios e passados pelo Headers.`}</li>\n      <li parentName=\"ul\">{`Os parâmetros cpf ou telefone e tipo na requisição são obrigatórias e passados pelo Body.`}</li>\n      <li parentName=\"ul\">{`Consulta realizada pelo telefone, retornara sempre o modulo LO mesmo que não tenha sido selecionado.`}</li>\n      <li parentName=\"ul\">{`Caso telefone retorne dois ou três cpfs, será retornado o modulo CB com nome e cpf para realizar uma nova consulta.`}</li>\n    </ul>\n    <h2>{`JSON Entrada:`}</h2>\n    <p>{`Exemplo utilizando `}<inlineCode parentName=\"p\">{`axios`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`class GetDataBoaVistaService {\n  async get(request: Request, response: Response) {\n    const { cpf } = request.params;\n\n    const boaVistaResponse = await axios.get(\"https://consumer.bvsnet.com.br/dadoscadastrais/json/v02\", {\n      params: {\n        usuario: process.env.BOAVISTA_USERNAME,\n        senha: process.env.BOAVISTA_PASSWORD,\n        cpf,\n        params: 'CB',\n      },\n    });\n\n    return response.json(boaVistaResponse.data);\n  }\n}\n`}</code></pre>\n    <h2>{`JSON Saída:`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"cadastroBasico\": {\n    \"cpf\": \"37800807886\",\n    \"nome\": \"Leonardo Oliveira De Almeida\",\n    \"nomeMae\": \"Herica Ribeiro De Oliveira\",\n    \"dataNascimento\": \"18/07/1999\",\n    \"situacaoCPF\": \"Regular\"\n  }\n}\n`}</code></pre>\n    <h2>{`Todas as saídas`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"cadastroBasico\": [\n        {\n            \"cpf\": \"26884624825\",\n            \"nome\": \"Nome Teste\",\n            \"nomeMae\": \"Nome Teste Mae\",\n            \"dataNascimento\": \"26/08/1976\",\n            \"situacaoCPF\": \"Regular\"\n        }\n    ],\n    \"cadastroCompleto\": {\n        \"cpf\": \"26884624825\",\n        \"nome\": \"Nome Teste\",\n        \"nomeMae\": \"Nome Teste Mae\",\n        \"dataNascimento\": \"26/08/1976\",\n        \"situacaoCPF\": \"Regular\",\n        \"dataAtualizacaoCPF\": \"01/01/0001\",\n        \"regiaoOrigemCPF\": \"Sao Paulo\",\n        \"signo\": \"Virgem\",\n        \"sexo\": \"F\",\n        \"grauInstrucao\": \"Pos Graduacao Completa\",\n        \"estadoCivil\": \"Solteiro\",\n        \"obito\": \"Não\"\n    },\n    \"localizacao\": {\n        \"cpf\": \"26884624825\",\n        \"emails\": [\n            \"anselmo@hudsonrebello.com.br\"\n        ],\n        \"enderecos\": [\n            {\n                \"tipoLogradouro\": \"R\",\n                \"logradouro\": \"Testes\",\n                \"numero\": \"12\",\n                \"complemento\": \"BLOCO TESTE\",\n                \"bairro\": \"Bairro Teste\",\n                \"cidade\": \"Sao Paulo\",\n                \"uf\": \"SP\",\n                \"cep\": \"01014000\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"ddd\": \"0\",\n                \"numero\": \"222223925\",\n                \"tipo\": \"CELULAR\"\n            },\n            {\n                \"ddd\": \"0\",\n                \"numero\": \"222223923\",\n                \"tipo\": \"CELULAR\"\n            },\n            {\n                \"ddd\": \"0\",\n                \"numero\": \"222223924\",\n                \"tipo\": \"CELULAR\"\n            },\n            {\n                \"ddd\": \"11\",\n                \"numero\": \"929321346\",\n                \"tipo\": \"CELULAR\"\n            },\n            {\n                \"ddd\": \"11\",\n                \"numero\": \"929332347\",\n                \"tipo\": \"CELULAR\"\n            }\n        ]\n    },\n    \"qualificacao\": {\n        \"cpf\": \"26884624825\",\n        \"obito\": \"Não\",\n        \"pessoasRelacionada\": [\n            {\n                \"nome\": \"Nome Teste Mae\",\n                \"grauParentesco\": \"Mae\"\n            }\n        ]\n    }\n}\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Caso telefone retorne dois ou três cpfs, será retornado o modulo CB com nome e cpf para realizar uma nova consulta.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"cadastroBasico\": [\n    {\n        \"cpf\": \"04205831900\",\n        \"nome\": \"Valdiney Ferreira De Matos\"\n    },\n    {\n        \"cpf\": \"40466930704\",\n        \"nome\": \"Milena De Fatima Nunes\"\n    },\n    {\n        \"cpf\": \"87559250300\",\n        \"nome\": \"Maria Das Neves Dias Ferreira\"\n    }\n  ]\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}