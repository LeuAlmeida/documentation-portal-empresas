{"data":{"site":{"siteMetadata":{"title":"Telecoms Schedule API - HIAE","docsLocation":"https://github.com/LeuAlmeida/schedule-telecoms-einstein/tree/master/content"}},"mdx":{"fields":{"id":"03408f39-65cc-57f1-bba9-53f2ab120e06","title":"Back End","slug":"/PowerBI/02-backend"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Back End\",\n  \"metaTitle\": \"back-end\",\n  \"metaDescription\": \"back-end\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Arquivo .env\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Arquivo .services.js\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Arquivo .controller.js\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Arquivo .routes.js\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Arquivo .env\"), mdx(\"p\", null, \" Vamos configurar nosso arquivo .env com as vari\\xE1veis necess\\xE1rias para nosso desenvolvimento:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"client_id=c7c283ae-####-####-####-############\\nclient_secret=nx22OMiEoDzr################+##############=\\ndataset_id=2a47c143-####-####-####-############\\nworkspace_id=5ed877b1-####-####-####-############\\nreport_id=53bb4afb-####-####-####-############\\npbiUsername=####@einstein.br\\nembed_url=https://app.powerbi.com/reportEmbed?reportId=53bb4afb-####-####-####-############&groupId=5ed877b1-####-####-####-############\\n\")), mdx(\"p\", null, \"Estas informa\\xE7\\xF5es acima foram capturadas da aplica\\xE7\\xE3o do powerbi conforme ensinado no link Power Bi.\"), mdx(\"h2\", null, \"Arquivo services.js\"), mdx(\"p\", null, \"Vamos criar nosso arquivo de servi\\xE7o que ir\\xE1 contemplar as fun\\xE7\\xF5es que vamos utilizar para gerar os token de acesso ao nosso painel do Power Bi\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const axios = require('axios')\\nconst qs = require('qs');\\n\\nconst generateAuthenticationToken = async () => {\\n    var token\\n\\n    const data = qs.stringify({\\n        'grant_type': 'client_credentials',\\n        'scope': 'openid',\\n        'resource': 'https://analysis.windows.net/powerbi/api',\\n        'client_id': process.env.client_id,\\n        'client_secret': process.env.client_secret\\n    });\\n\\n    const config = {\\n        method: 'post',\\n        url: 'https://login.microsoftonline.com/6dc28345-####-####-####-##########/oauth2/token',\\n        headers: {\\n            'Accept': 'application/json',\\n            'Content-Type': 'application/x-www-form-urlencoded',\\n        },\\n        data: data\\n    };\\n\\n    const responseToken = await axios(config)\\n    return token = responseToken.data.access_token\\n}\\n\\nconst generateEmbedUrl = async (token) => {\\n    var responseData\\n    const embedData = JSON.stringify({\\n      \\\"datasets\\\": [{ \\\"id\\\": process.env.dataset_id }],\\n      \\\"reports\\\": [{ \\\"id\\\": process.env.report_id }],\\n      \\\"targetWorkspaces\\\": [{ \\\"id\\\": process.env.workspace_id }]\\n    });\\n\\n    const embedConfig = {\\n      method: 'post',\\n      url: 'https://api.powerbi.com/v1.0/myorg/GenerateToken',\\n      headers: {\\n          'Authorization': `Bearer ${token}`,\\n          'Content-Type': 'application/json'\\n      },\\n      data: embedData\\n    }\\n\\n    try {\\n        const responseEmbedUrl = await axios(embedConfig)\\n        responseData = responseEmbedUrl.data\\n        return responseData\\n    } catch (error) {\\n        console.log('error', error)\\n    }\\n}\\n\\nmodule.exports = { generateAuthenticationToken, generateEmbedUrl };\\n\")), mdx(\"p\", null, \"Agora vamos explicar o que est\\xE1 ocorrendo acima:\"), mdx(\"p\", null, \"A fun\\xE7\\xE3o generateAuthenticationToken ir\\xE1 disponibilizar o token de acesso para o painel e ao dashboard\"), mdx(\"p\", null, \"A fun\\xE7\\xE3o generateEmbedUrl ir\\xE1 receber o tohen da fun\\xE7\\xE3o generateAuthenticationToken como parametro e nos retornar\\xE1 o tokem embedado de acesso ao dashboard.\"), mdx(\"h2\", null, \"Arquivo controller.js\"), mdx(\"p\", null, \"Neste arquivo vamos orquestrar a ordem das chamadas das fun\\xE7\\xE3oes importadas do arquivo services.js citado acima e ir\\xE1 nos retornar o resultado (Token embedado) ou erro.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const {\\n    generateAuthenticationToken,\\n    generateEmbedUrl\\n} = require('../services/service')\\n\\nconst getAuthenticationToken = async (req, res) => {\\n    const token = await generateAuthenticationToken()\\n    if (!token) return res.status(400).send('Error on generate Token')\\n    const response = await generateEmbedUrl(token)\\n    if (response) return res.status(200).json(response)\\n    return res.status(400).send('Error on generate response data')\\n}\\n\\nmodule.exports = { getAuthenticationToken };\\n\")), mdx(\"h2\", null, \"Arquivo routes.js\"), mdx(\"p\", null, \"Agora vamos disponibilizar uma rota:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const express = require(\\\"express\\\")\\nconst routes = express.Router()\\nconst Controller = require('./app/controllers/controller')\\n\\n//POWERBI ROUTES\\nroutes.get(\\\"/#######/#######\\\", Controller.getAuthenticationToken);\\n\\nmodule.exports = routes\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#arquivo-env","title":"Arquivo .env"},{"url":"#arquivo-servicesjs","title":"Arquivo services.js"},{"url":"#arquivo-controllerjs","title":"Arquivo controller.js"},{"url":"#arquivo-routesjs","title":"Arquivo routes.js"}]},"parent":{"__typename":"File","relativePath":"PowerBI/02-backend.mdx"},"frontmatter":{"metaTitle":"back-end","metaDescription":"back-end"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/Telecoms","title":"Telecoms"}}},{"node":{"fields":{"slug":"/PowerBI/01-introduction","title":"Introdução Power BI Javascript"}}},{"node":{"fields":{"slug":"/PowerBI/02-backend","title":"Back End"}}},{"node":{"fields":{"slug":"/PowerBI/03-frontend","title":"Front End"}}},{"node":{"fields":{"slug":"/Telecoms/01-trans-union","title":"Trans Union"}}},{"node":{"fields":{"slug":"/Telecoms/02-boa-vista-scpc","title":"Boa Vista - SCPC"}}},{"node":{"fields":{"slug":"/Telecoms/03-serasa","title":"Serasa"}}},{"node":{"fields":{"slug":"/PowerBI","title":"Power Bi"}}}]}},"pageContext":{"id":"03408f39-65cc-57f1-bba9-53f2ab120e06"}}